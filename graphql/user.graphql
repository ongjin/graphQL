# type Users_Temp {
#   USER_NO: Int!
#   USER_ID: String!
#   USER_PW: String!
#   USER_EMAIL: String!
#   USER_PHONE: String!
#   USER_JADATE: String!
#   USER_NAME: String!
# }
# # type Users_Temp {
# #   userNo: Int!
# #   userId: String!
# #   userPw: String!
# #   userEmail: String!
# #   userPhone: String!
# #   userJADate: String!
# #   userName: String!
# # }

# type Query {
#   getUsers: [Users_Temp!]!
#   getUser(USER_NO: Int!): Users_Temp!
#   # findOneBy({USER_NO: userNo}): [Users_Temp!]!
# }

type Users_Temp {
  USER_NO: Int
  USER_ID: String
  USER_PW: String
  USER_EMAIL: String
  USER_PHONE: String
  USER_JADATE: String
  USER_NAME: String
}

type Query {
  getUsers(dbName: String!): [Users_Temp!]
  getU(dbName: String, limit: Int, current: Int): [Users_Temp]
  # getUsers: [Users_Temp!]
  getUser(userNo: Int!): Users_Temp!
  # findOneBy({USER_NO: userNo}): [Users_Temp!]!
}

type Mutation {
  createUser(input: CreateUserInput!): Users_Temp!
  deleteUser(USER_NO: Int!): Boolean!
  updateUser(input: UpdateUserInput!): Users_Temp!
}

input CreateUserInput {
  USER_NO: Int
  USER_ID: String
  USER_PW: String
  USER_EMAIL: String
  USER_PHONE: String
  USER_JADATE: String
  USER_NAME: String
}

input UpdateUserInput {
  USER_NO: Int
  USER_ID: String
  USER_PW: String
  USER_EMAIL: String
  USER_PHONE: String
  USER_JADATE: String
  USER_NAME: String
}
